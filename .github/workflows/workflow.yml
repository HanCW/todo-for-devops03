# .github/workflows/deploy.yml
# Next.js + GitHub Actions + Azure VM 2대 배포 (강의용)

name: Next.js CI/CD Pipeline

on:
  push:
    branches: [ main ]

env:
  NODE_VERSION: '20'
  APP_PATH: '/home/azureuser/app'

jobs:
  # =======================
  # 🧪 CI: Build & Test
  # =======================
  build:
    name: 🔨 Build & Test
    runs-on: ubuntu-latest

    steps:
      - name: 📅 Checkout code
        uses: actions/checkout@v4

      - name: ♻️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: ✅ Run tests
        run: |
          if npm run | grep -q test; then npm test; else echo "No tests defined."; fi

      - name: 🔨 Build app
        run: npm run build

      - name: 📦 Package app
        run: |
          mkdir -p deployment-package

          # 디렉토리 복사 (존재할 때만)
          for path in .next node_modules public prisma; do
            if [ -e "$path" ]; then
              echo "📁 Copying $path"
              cp -r "$path" deployment-package/
            else
              echo "⚠️ $path not found, skipping"
            fi
          done

          # 파일 복사 (존재할 때만)
          for file in package.json package-lock.json next.config.js; do
            if [ -f "$file" ]; then
              echo "📄 Copying $file"
              cp "$file" deployment-package/
            else
              echo "⚠️ $file not found, skipping"
            fi
          done

      - name: 📤 Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-bundle
          path: deployment-package/

  # =======================
  # 🚀 CD: Deploy to Azure VM
  # =======================
  deploy:
    name: 🚀 Deploy to Azure VM
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Download build
        uses: actions/download-artifact@v4
        with:
          name: app-bundle
          path: ./app-bundle

      - name: 🔐 Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: 🛠 Add known hosts
        run: ssh-keyscan -H ${{ secrets.VM_HOST }} >> ~/.ssh/known_hosts

      - name: ⏹ Stop old app
        run: ssh azureuser@${{ secrets.VM_HOST }} "pm2 stop todo-app || true && pm2 delete todo-app || true"

      - name: 🗑 Clean & prepare folder
        run: ssh azureuser@${{ secrets.VM_HOST }} "rm -rf $APP_PATH && mkdir -p $APP_PATH"

      - name: 📦 Package app
        run: |
          tar -czf app.tar.gz \
            --exclude='node_modules' \
            -C ./app-bundle \
            .next public prisma package.json package-lock.json next.config.js || echo "⚠️ 일부 파일 누락, 계속 진행"

      - name: 📦 Upload app to VM
        run: scp app.tar.gz azureuser@${{ secrets.VM_HOST }}:$APP_PATH/

      - name: 📦 Extract and install on VM
        run: |
          ssh azureuser@${{ secrets.VM_HOST }} "
            cd $APP_PATH && \
            tar -xzf app.tar.gz && \
            rm app.tar.gz && \
            npm ci --only=production
          "

      - name: ⚖️ Setup .env.local
        run: |
          ssh azureuser@${{ secrets.VM_HOST }} "
            cd $APP_PATH && \
            echo 'DATABASE_URL=${{ secrets.DATABASE_URL }}' > .env.local && \
            echo 'NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}' >> .env.local && \
            echo 'NEXTAUTH_URL=http://${{ secrets.VM_HOST }}:3000' >> .env.local && \
            echo 'NODE_ENV=production' >> .env.local
          "

      - name: 📝 Setup Prisma
        run: ssh azureuser@${{ secrets.VM_HOST }} "cd $APP_PATH && source .env.local && npx prisma generate && npx prisma db push"

      - name: 🔨 Start app via PM2
        run: ssh azureuser@${{ secrets.VM_HOST }} "cd $APP_PATH && pm2 start npm --name todo-app -- start && pm2 save"

      - name: 🚨 Health check
        run: |
          sleep 10
          if curl -f http://${{ secrets.VM_HOST }}; then
            echo "✅ App running successfully"
          else
            echo "❌ Health check failed"
            ssh azureuser@${{ secrets.VM_HOST }} "pm2 logs todo-app --lines 50"
            exit 1
          fi

      - name: 📊 Deployment summary
        run: echo "🎉 Deployed to http://${{ secrets.VM_HOST }}"
